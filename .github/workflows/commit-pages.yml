name: Deploy to GitHub Pages

# Run workflow on every push to the master branch
on:
  push:
    branches: [ master ]

jobs:
  deploy-to-github-pages:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    steps:
    # uses GitHub's checkout action to checkout code form the master branch
    - uses: actions/checkout@v2
    
    # sets up .NET Core SDK 3.1
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1

    # publishes Blazor project to the release-folder
    - name: Publish .NET Core Project
      run: dotnet publish BlazorGitHubPagesDemo.csproj -c Release -o release --nologo
    
    # changes the base-tag in index.html from '/' to 'BlazorGitHubPagesDemo' to match GitHub Pages repository subdirectory
    - name: Change base-tag in index.html from / to BlazorGitHubPagesDemo
      run: sed -i 's/<base href="\/" \/>/<base href="\/BlazorGitHubPagesDemo\/" \/>/g' release/wwwroot/index.html
    
    # copy index.html to 404.html to serve the same file when a file is not found
    - name: copy index.html to 404.html
      run: cp release/wwwroot/index.html release/wwwroot/404.html

    # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
    - name: Add .nojekyll file
      run: touch release/wwwroot/.nojekyll
      
    - name: GitHub Pages action # Deploys the site           
      uses: peaceiris/actions-gh-pages@v3.7.3
      
    - name: Commit wwwroot to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@3.7.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages
        FOLDER: release/wwwroot



































name: commit to pages # name key: property/value/function a basic workflow to publish commits to pages 
on: # on: Controls when the action will run. 
  push: # Triggers the workflow on push or pull request events but only for the master branch
   branches: [ master ] # push to master branch 
                            # pull_request:
                            # branches: [ master ]
                            
                            
  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2 # uses GitHub's checkout actions to checkout code from the master branch
      - name: Setup .Net Core SDK # Installs .Net core SDK 3.1
      - uses: actions/setup-dotnet@v1
        with:
         dotnet-version: 5.0.102
      - name: GitTools # version control utility
        uses: GitTools/actions@v0.9.9
        
# publishes SDK to the release folder      
      - name: Publish .NET Core Project # publishes Blazor project to the release-folder
        run: dotnet publish BlazorGitHubPagesDemo.csproj -c Release -o release --nologo
        
# Deploy the site           
      - name: GitHub Pages action # Deploys the site           
        uses: peaceiris/actions-gh-pages@v3.7.3

# resolves token use for communicating w/ GitHub up on your behalf.
        with: 
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         BRANCH: gh-pages
         FOLDER: release/wwwroot




      # Runs a single command using the runners shell
    #  - name: Run a one-line script
     #   run: echo Hello, world!

      # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
        # run: |
         # echo Add other actions to build,
         # echo test, and deploy your project.
          
     #  - name: Publish .NET Core Project   # publishes Blazor project to the release-folder

      # run: dotnet publish BlazorGitHubPagesDemo.csproj -c Release -o release --nologo




